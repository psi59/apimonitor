// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import amerr "github.com/realsangil/apimonitor/pkg/amerr"
import mock "github.com/stretchr/testify/mock"
import models "github.com/realsangil/apimonitor/models"

// EndpointService is an autogenerated mock type for the EndpointService type
type EndpointService struct {
	mock.Mock
}

// CreateEndpoint provides a mock function with given fields: webService, request
func (_m *EndpointService) CreateEndpoint(webService *models.WebService, request models.EndpointRequest) (*models.Endpoint, *amerr.ErrorWithLanguage) {
	ret := _m.Called(webService, request)

	var r0 *models.Endpoint
	if rf, ok := ret.Get(0).(func(*models.WebService, models.EndpointRequest) *models.Endpoint); ok {
		r0 = rf(webService, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Endpoint)
		}
	}

	var r1 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(1).(func(*models.WebService, models.EndpointRequest) *amerr.ErrorWithLanguage); ok {
		r1 = rf(webService, request)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*amerr.ErrorWithLanguage)
		}
	}

	return r0, r1
}

// GetEndpointById provides a mock function with given fields: endpoint
func (_m *EndpointService) GetEndpointById(endpoint *models.Endpoint) *amerr.ErrorWithLanguage {
	ret := _m.Called(endpoint)

	var r0 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(0).(func(*models.Endpoint) *amerr.ErrorWithLanguage); ok {
		r0 = rf(endpoint)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*amerr.ErrorWithLanguage)
		}
	}

	return r0
}
