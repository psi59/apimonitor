// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	amerr "github.com/realsangil/apimonitor/pkg/amerr"
	mock "github.com/stretchr/testify/mock"

	models "github.com/realsangil/apimonitor/models"

	rsmodel "github.com/realsangil/apimonitor/pkg/rsmodels"
)

// WebServiceService is an autogenerated mock type for the WebServiceService type
type WebServiceService struct {
	mock.Mock
}

// CreateWebService provides a mock function with given fields: request
func (_m *WebServiceService) CreateWebService(request models.WebServiceRequest) (*models.WebService, *amerr.ErrorWithLanguage) {
	ret := _m.Called(request)

	var r0 *models.WebService
	if rf, ok := ret.Get(0).(func(models.WebServiceRequest) *models.WebService); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.WebService)
		}
	}

	var r1 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(1).(func(models.WebServiceRequest) *amerr.ErrorWithLanguage); ok {
		r1 = rf(request)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*amerr.ErrorWithLanguage)
		}
	}

	return r0, r1
}

// DeleteWebServiceById provides a mock function with given fields: webService
func (_m *WebServiceService) DeleteWebServiceById(webService *models.WebService) *amerr.ErrorWithLanguage {
	ret := _m.Called(webService)

	var r0 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(0).(func(*models.WebService) *amerr.ErrorWithLanguage); ok {
		r0 = rf(webService)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*amerr.ErrorWithLanguage)
		}
	}

	return r0
}

// GetWebServiceById provides a mock function with given fields: webService
func (_m *WebServiceService) GetWebServiceById(webService *models.WebService) *amerr.ErrorWithLanguage {
	ret := _m.Called(webService)

	var r0 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(0).(func(*models.WebService) *amerr.ErrorWithLanguage); ok {
		r0 = rf(webService)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*amerr.ErrorWithLanguage)
		}
	}

	return r0
}

// GetWebServiceList provides a mock function with given fields: request
func (_m *WebServiceService) GetWebServiceList(request models.WebServiceListRequest) (*rsmodel.PaginatedList, *amerr.ErrorWithLanguage) {
	ret := _m.Called(request)

	var r0 *rsmodel.PaginatedList
	if rf, ok := ret.Get(0).(func(models.WebServiceListRequest) *rsmodel.PaginatedList); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*rsmodel.PaginatedList)
		}
	}

	var r1 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(1).(func(models.WebServiceListRequest) *amerr.ErrorWithLanguage); ok {
		r1 = rf(request)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*amerr.ErrorWithLanguage)
		}
	}

	return r0, r1
}

// UpdateWebServiceById provides a mock function with given fields: webService, request
func (_m *WebServiceService) UpdateWebServiceById(webService *models.WebService, request models.WebServiceRequest) *amerr.ErrorWithLanguage {
	ret := _m.Called(webService, request)

	var r0 *amerr.ErrorWithLanguage
	if rf, ok := ret.Get(0).(func(*models.WebService, models.WebServiceRequest) *amerr.ErrorWithLanguage); ok {
		r0 = rf(webService, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*amerr.ErrorWithLanguage)
		}
	}

	return r0
}
